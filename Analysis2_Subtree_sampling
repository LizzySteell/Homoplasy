##### 2023-10-08

### ANALYSIS 2

### Varying number of taxa: subtree sampling.
### Using Telluraves dataset as example. R code file 'Telluraves_prep' must be run before this file can be run.

library(ape)
library(maps)
library(phytools)
library(phangorn)
library(TreeTools)
library(TreeSearch)
library(geiger)
library(dispRity)
library(fitdistrplus)
library(remotes)
library(janitor)

# Make contrast matrix for simulations

contrast <- matrix(data=c(
#  	0 1	2 
	1,0,0, 
	0,1,0, 
	0,0,1,
	1,1,1), 
	ncol=3, byrow=TRUE) 
dimnames(contrast) <- list(c("0", "1", "2", "?"), c("0", "1", "2"))

#Root the tree and give it branch lengths based on the matrix. This also randomly resolves polytomies.
tree <- acctran(tree, phydat)

n_subsets <- seq(10, 62, by=2) #Vector for number of taxa to include in each subset analysis

#Subset trees so there are 100 subsetted topologies per number of taxa
sub_trees <- c()
for(i in 1:length(n_subsets)){
	sub_trees[[i]] <- subset.trees(100, tree, n_subsets[i])
}

#Simulate a matrix for each of the 100 subsetted trees for each n category
#2 rate categories: -5, -3 (slow and fast)

matrices <- c()
for(i in 1:length(n_subsets)){
	matrices[[i]] <- lapply(sub_trees[[i]], sim.morpho, characters=as.numeric(dim(data)[2]), states=c(0.9, 0.1), model="ER", rates=c(rlnorm, meanlog=-5, sdlog=0.1), invariant=FALSE)
	print(i)	
}

phydats <- c()
for(i in 1:length(matrices)){
	phydats[[i]] <- lapply(matrices[[i]], phyDat, type="USER", contrast=contrast)
}

#Consistency index
cis <- c()
for(j in 1:length(sub_trees)){
	cis[[j]] <- mapply(CI, sub_trees[[j]], phydats[[j]])
}

cis_med <- lapply(cis, quantile, prob=0.5)
cis_med <- as.numeric(cis_med)
cis_05 <- lapply(cis, quantile, prob=0.05)
cis_05 <- as.numeric(cis_05)
cis_95 <- lapply(cis, quantile, prob=0.95)
cis_95 <- as.numeric(cis_95)

#Retention index
ris <- c()
for(j in 1:length(sub_trees)){
	ris[[j]] <- mapply(RI, sub_trees[[j]], phydats[[j]])
}

ris_med <- lapply(ris, quantile, prob=0.5)
ris_med <- as.numeric(ris_med)
ris_05 <- lapply(ris, quantile, prob=0.05)
ris_05 <- as.numeric(ris_05)
ris_95 <- lapply(ris, quantile, prob=0.95)
ris_95 <- as.numeric(ris_95)


#RHI

rhis <- c()
for(i in 1:length(sub_trees)){
		rhis[[i]] <- mapply(RHI, matrices[[i]], sub_trees[[i]], MoreArgs=list(n=100, contrast=contrast))
		print(i)
	}
	

rhi_vals <- c()

for(j in 1:length(rhis)){
	
		rhi_vals[[j]] <- rhis[[j]][2,]
	}

rhis_med <- lapply(rhi_vals, quantile, prob=0.5)
rhis_med <- as.numeric(rhis_med)
rhis_05 <- lapply(rhi_vals, quantile, prob=0.05)
rhis_05 <- as.numeric(rhis_05)
rhis_95 <- lapply(rhi_vals, quantile, prob=0.95)
rhis_95 <- as.numeric(rhis_95)

#Tree length
#Extract treelength (L) values

L_vals <- c()
for(j in 1:length(rhis)){
	
		L_vals[[j]] <- rhis[[j]][4,]
	}
	
#Extract Lmin values
Lmin_vals <- c()
for(j in 1:length(rhis)){
	
		Lmin_vals[[j]] <- rhis[[j]][5,]
	}


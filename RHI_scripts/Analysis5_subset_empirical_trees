##### 2023-10-08

### ANALYSIS 5

### Varying number of taxa using empirical topologies and empirical matrices.
### Using Telluraves dataset as example. R code file 'Telluraves_prep' must be run before this file can be run.

library(ape)
library(maps)
library(phytools)
library(phangorn)
library(TreeTools)
library(TreeSearch)
library(geiger)
library(dispRity)
library(fitdistrplus)
library(remotes)
library(janitor)

#Subset taxa from empirical topology

#Decreasing taxa from n=62 in increments of 5.

n_subsets <- seq(10, 60, by=5) #Vector for number of taxa to include in each subset analysis

#Subsample the trees per taxon number using subset.trees()
sub_trees <- c()
for(i in 1:length(n_subsets)){
	sub_trees[[i]] <- subset.trees(100, tree, n_subsets[i]) #100 random samples of the tree with n_taxa number of taxa included
}

#Subset the matrices to discard taxa according to the trees using subset.matrices()
sub_mats <- lapply(sub_trees, subset.matrix, data)
#Generates a list of lists (each list contains 100 matrices)

#Make phydats for CI and RI

#IMPORTANT: make sure contrast matrix matches empirical contrast matrix

phydats <- c()
for(i in 1:length(sub_mats)){
	phydats[[i]] <- lapply(sub_mats[[i]], phyDat, type="USER", contrast=contrast)
}

#Consistency index
cis <- c()
for(j in 1:length(sub_trees)){
	cis[[j]] <- mapply(CI, sub_trees[[j]], phydats[[j]])
}

cis_med <- lapply(cis, quantile, prob=0.5)
cis_med <- as.numeric(cis_med)
cis_05 <- lapply(cis, quantile, prob=0.05)
cis_05 <- as.numeric(cis_05)
cis_95 <- lapply(cis, quantile, prob=0.95)
cis_95 <- as.numeric(cis_95)

#Retention index
ris <- c()
for(j in 1:length(sub_trees)){
	ris[[j]] <- mapply(RI, sub_trees[[j]], phydats[[j]])
}

ris_med <- lapply(ris, quantile, prob=0.5)
ris_med <- as.numeric(ris_med)
ris_05 <- lapply(ris, quantile, prob=0.05)
ris_05 <- as.numeric(ris_05)
ris_95 <- lapply(ris, quantile, prob=0.95)
ris_95 <- as.numeric(ris_95)

#RHI

rhis <- c()
for(i in 1:length(sub_trees)){
		rhis[[i]] <- mapply(RHI, sub_mats[[i]], sub_trees[[i]], MoreArgs=list(n=100, contrast=contrast))
		print(i)
	}
	
rhi_vals <- c()

for(j in 1:length(rhis)){
	
		rhi_vals[[j]] <- rhis[[j]][2,]
	}

rhis_med <- lapply(rhi_vals, quantile, prob=0.5)
rhis_med <- as.numeric(rhis_med)
rhis_05 <- lapply(rhi_vals, quantile, prob=0.05)
rhis_05 <- as.numeric(rhis_05)
rhis_95 <- lapply(rhi_vals, quantile, prob=0.95)
rhis_95 <- as.numeric(rhis_95) 

##### 2023-10-08

### ANALYSIS 6

### Varying number of characters using empirical topologies and empirical matrices.
### Using Telluraves dataset as example. R code file 'Telluraves_prep' must be run before this file can be run.

library(ape)
library(maps)
library(phytools)
library(phangorn)
library(TreeTools)
library(TreeSearch)
library(geiger)
library(dispRity)
library(fitdistrplus)
library(remotes)
library(janitor)

#Subsetting characters - empirical tree, empirical matrix

#Subset characters in increments of 10 from 140 to 10

n_chars <- seq(10, 140, by=10)

sub_matrices <- c()
for(i in 1:length(n_chars)){
	sub_matrices[[i]] <- replicate(100, data[,sample(ncol(data), n_chars[i])], simplify=F)
}

phydats <- c()
for(i in 1:length(sub_matrices)){
	phydats[[i]] <- lapply(sub_matrices[[i]], phyDat, type="USER", contrast=contrast)
}

#Consistency index
ci_ <- c()
cis <- c()
for(j in 1:length(phydats)){
	for(k in 1:length(phydats[[j]]))
	ci_[[k]] <- CI(tree, phydats[[j]][[k]])
	cis[[j]] <- ci_
}

cis <- lapply(cis, as.numeric)

cis_med <- lapply(cis, quantile, prob=0.5)
cis_med <- as.numeric(cis_med)
cis_05 <- lapply(cis, quantile, prob=0.05)
cis_05 <- as.numeric(cis_05)
cis_95 <- lapply(cis, quantile, prob=0.95)
cis_95 <- as.numeric(cis_95)

#Retention index
ri_ <- c()
ris <- c()
for(j in 1:length(phydats)){
	for(k in 1:length(phydats[[j]]))
	ri_[[k]] <- RI(tree, phydats[[j]][[k]])
	ris[[j]] <- ri_
}

ris <- lapply(ris, as.numeric)

ris_med <- lapply(ris, quantile, prob=0.5)
ris_med <- as.numeric(ris_med)
ris_05 <- lapply(ris, quantile, prob=0.05)
ris_05 <- as.numeric(ris_05)
ris_95 <- lapply(ris, quantile, prob=0.95)
ris_95 <- as.numeric(ris_95)

#RHI

rhis <- c()
for(i in 1:length(sub_matrices)){
		rhis[[i]] <- lapply(sub_matrices[[i]], RHI, tree, 100, contrast)
		print(i)
	}
	
rhi_val <- c()
rhi_vals <- c()

for(j in 1:length(rhis)){
	for(k in 1:length(rhis[[j]])){
		rhi_val[[k]] <- rhis[[j]][[k]][[2]]
	}
	rhi_vals[[j]] <- rhi_val
}

rhi_vals <- lapply(rhi_vals, as.numeric)

rhis_med <- lapply(rhi_vals, quantile, prob=0.5)
rhis_med <- as.numeric(rhis_med)
rhis_05 <- lapply(rhi_vals, quantile, prob=0.05)
rhis_05 <- as.numeric(rhis_05)
rhis_95 <- lapply(rhi_vals, quantile, prob=0.95)
rhis_95 <- as.numeric(rhis_95) 
